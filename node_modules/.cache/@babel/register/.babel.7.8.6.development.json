{
  "{\"sourceRoot\":\"/Users/soulruji/Gitlab_private/supergulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/soulruji/Gitlab_private/supergulp\",\"filename\":\"/Users/soulruji/Gitlab_private/supergulp/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/soulruji/Gitlab_private/supergulp\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/soulruji/Gitlab_private/supergulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/soulruji/Gitlab_private/supergulp",
      "filename": "/Users/soulruji/Gitlab_private/supergulp/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/soulruji/Gitlab_private/supergulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/soulruji/Gitlab_private/supergulp/gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/soulruji/Gitlab_private/supergulp/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/soulruji/Gitlab_private/supergulp",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dev = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _browserslist = _interopRequireDefault(require(\"browserslist\"));\n\nvar _gulpBro = _interopRequireDefault(require(\"gulp-bro\"));\n\nvar _babelify = _interopRequireDefault(require(\"babelify\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_gulpSass.default.compiler = require('node-sass');\nvar routes = {\n  pug: {\n    watch: \"src/**/*.pug\",\n    src: \"src/*.pug\",\n    dest: \"build\"\n  },\n  img: {\n    src: \"src/img/*\",\n    dest: \"build/img\"\n  },\n  sass: {\n    watch: 'src/sass/**/*.scss',\n    src: 'src/sass/style.scss',\n    dest: 'build/css'\n  },\n  js: {\n    watch: \"src/js/**/.js\",\n    src: 'src/js/main.js',\n    dest: 'build/js'\n  }\n};\n\nvar pug = function pug() {\n  return _gulp.default.src(routes.pug.src).pipe((0, _gulpPug.default)()).pipe(_gulp.default.dest(routes.pug.dest));\n};\n\nvar img = function img() {\n  return _gulp.default.src(routes.img.src).pipe((0, _gulpImage.default)()).pipe(_gulp.default.dest(routes.img.dest));\n};\n\nvar styles = function styles() {\n  return _gulp.default.src(routes.sass.src).pipe((0, _gulpSass.default)().on(\"error\", _gulpSass.default.logError)).pipe((0, _gulpAutoprefixer.default)()).pipe((0, _gulpCsso.default)()).pipe(_gulp.default.dest(routes.sass.dest));\n};\n\nvar js = function js() {\n  return _gulp.default.src(routes.js.src).pipe((0, _gulpBro.default)({\n    transform: [_babelify.default.configure({\n      presets: ['@babel/preset-env']\n    }), ['uglifyify', {\n      global: true\n    }]]\n  })).pipe(_gulp.default.dest(routes.js.dest));\n};\n\nvar clean = function clean() {\n  return (0, _del.default)(['build']);\n};\n\nvar webserver = function webserver() {\n  return _gulp.default.src(\"build\").pipe((0, _gulpWebserver.default)({\n    liveload: true,\n    open: true\n  }));\n};\n\nvar watch = function watch() {\n  _gulp.default.watch(routes.pug.watch, pug);\n\n  _gulp.default.watch(routes.img.src, img);\n\n  _gulp.default.watch(routes.sass.watch, styles);\n\n  _gulp.default.watch(routes.js.watch, js);\n};\n\nvar prepare = _gulp.default.series([clean, img]);\n\nvar assets = _gulp.default.series([pug, styles, js]);\n\nvar postDev = _gulp.default.series([webserver, watch]);\n\nvar dev = _gulp.default.series([prepare, assets, postDev]);\n\nexports.dev = dev;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJjb21waWxlciIsInJlcXVpcmUiLCJyb3V0ZXMiLCJwdWciLCJ3YXRjaCIsInNyYyIsImRlc3QiLCJpbWciLCJqcyIsImd1bHAiLCJwaXBlIiwic3R5bGVzIiwib24iLCJsb2dFcnJvciIsInRyYW5zZm9ybSIsImJhYmVsaWZ5IiwiY29uZmlndXJlIiwicHJlc2V0cyIsImdsb2JhbCIsImNsZWFuIiwid2Vic2VydmVyIiwibGl2ZWxvYWQiLCJvcGVuIiwicHJlcGFyZSIsInNlcmllcyIsImFzc2V0cyIsInBvc3REZXYiLCJkZXYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBQSxrQkFBS0MsUUFBTCxHQUFnQkMsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7QUFFQSxJQUFNQyxNQUFNLEdBQUc7QUFDWEMsRUFBQUEsR0FBRyxFQUFFO0FBQ0RDLElBQUFBLEtBQUssRUFBRSxjQUROO0FBRURDLElBQUFBLEdBQUcsRUFBRSxXQUZKO0FBR0RDLElBQUFBLElBQUksRUFBRTtBQUhMLEdBRE07QUFNWEMsRUFBQUEsR0FBRyxFQUFFO0FBQ0RGLElBQUFBLEdBQUcsRUFBRSxXQURKO0FBRURDLElBQUFBLElBQUksRUFBRTtBQUZMLEdBTk07QUFVWFAsRUFBQUEsSUFBSSxFQUFFO0FBQ0ZLLElBQUFBLEtBQUssRUFBRSxvQkFETDtBQUVGQyxJQUFBQSxHQUFHLEVBQUUscUJBRkg7QUFHRkMsSUFBQUEsSUFBSSxFQUFFO0FBSEosR0FWSztBQWVYRSxFQUFBQSxFQUFFLEVBQUU7QUFDQUosSUFBQUEsS0FBSyxFQUFFLGVBRFA7QUFFQUMsSUFBQUEsR0FBRyxFQUFFLGdCQUZMO0FBR0FDLElBQUFBLElBQUksRUFBRTtBQUhOO0FBZk8sQ0FBZjs7QUFzQkEsSUFBTUgsR0FBRyxHQUFH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Q08sSUFBTXVCLEdBQUcsR0FBR2xCLGNBQUtlLE1BQUwsQ0FBWSxDQUFDRCxPQUFELEVBQVVFLE1BQVYsRUFBa0JDLE9BQWxCLENBQVosQ0FBWiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvc291bHJ1amkvR2l0bGFiX3ByaXZhdGUvc3VwZXJndWxwIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSBcImd1bHBcIjtcbmltcG9ydCBncHVnIGZyb20gJ2d1bHAtcHVnJztcbmltcG9ydCBkZWwgZnJvbSAnZGVsJztcbmltcG9ydCB3cyBmcm9tICdndWxwLXdlYnNlcnZlcic7XG5pbXBvcnQgZ2ltYWdlIGZyb20gJ2d1bHAtaW1hZ2UnO1xuaW1wb3J0IHNhc3MgZnJvbSAnZ3VscC1zYXNzJztcbmltcG9ydCBhdXRvcHJlZml4ZXIgZnJvbSAnZ3VscC1hdXRvcHJlZml4ZXInO1xuaW1wb3J0IG1pbmlmeWNzcyBmcm9tICdndWxwLWNzc28nO1xuaW1wb3J0IHBvc3Rjc3MgZnJvbSBcImd1bHAtcG9zdGNzc1wiO1xuaW1wb3J0IGJyb3dzZXJzbGlzdCBmcm9tICdicm93c2Vyc2xpc3QnO1xuaW1wb3J0IGJybyBmcm9tICdndWxwLWJybyc7XG5pbXBvcnQgYmFiZWxpZnkgZnJvbSAnYmFiZWxpZnknO1xuXG5cbnNhc3MuY29tcGlsZXIgPSByZXF1aXJlKCdub2RlLXNhc3MnKTtcblxuY29uc3Qgcm91dGVzID0ge1xuICAgIHB1Zzoge1xuICAgICAgICB3YXRjaDogXCJzcmMvKiovKi5wdWdcIixcbiAgICAgICAgc3JjOiBcInNyYy8qLnB1Z1wiLFxuICAgICAgICBkZXN0OiBcImJ1aWxkXCJcbiAgICB9LFxuICAgIGltZzoge1xuICAgICAgICBzcmM6IFwic3JjL2ltZy8qXCIsXG4gICAgICAgIGRlc3Q6IFwiYnVpbGQvaW1nXCJcbiAgICB9LFxuICAgIHNhc3M6IHtcbiAgICAgICAgd2F0Y2g6ICdzcmMvc2Fzcy8qKi8qLnNjc3MnLFxuICAgICAgICBzcmM6ICdzcmMvc2Fzcy9zdHlsZS5zY3NzJyxcbiAgICAgICAgZGVzdDogJ2J1aWxkL2NzcydcbiAgICB9LFxuICAgIGpzOiB7XG4gICAgICAgIHdhdGNoOiBcInNyYy9qcy8qKi8uanNcIixcbiAgICAgICAgc3JjOiAnc3JjL2pzL21haW4uanMnLFxuICAgICAgICBkZXN0OiAnYnVpbGQvanMnXG4gICAgfVxufTtcblxuY29uc3QgcHVnID0gKCkgPT5cbiAgICBndWxwXG4gICAgLnNyYyhyb3V0ZXMucHVnLnNyYylcbiAgICAucGlwZShncHVnKCkpXG4gICAgLnBpcGUoZ3VscC5kZXN0KHJvdXRlcy5wdWcuZGVzdCkpO1xuXG5jb25zdCBpbWcgPSAoKSA9PlxuICAgIGd1bHBcbiAgICAuc3JjKHJvdXRlcy5pbWcuc3JjKVxuICAgIC5waXBlKGdpbWFnZSgpKVxuICAgIC5waXBlKGd1bHAuZGVzdChyb3V0ZXMuaW1nLmRlc3QpKTtcblxuY29uc3Qgc3R5bGVzID0gKCkgPT5cbiAgICBndWxwXG4gICAgLnNyYyhyb3V0ZXMuc2Fzcy5zcmMpXG4gICAgLnBpcGUoc2FzcygpLm9uKFwiZXJyb3JcIiwgc2Fzcy5sb2dFcnJvcikpXG4gICAgLnBpcGUoYXV0b3ByZWZpeGVyKCkpXG4gICAgLnBpcGUobWluaWZ5Y3NzKCkpXG4gICAgLnBpcGUoZ3VscC5kZXN0KHJvdXRlcy5zYXNzLmRlc3QpKTtcblxuY29uc3QganMgPSAoKSA9PlxuICAgIGd1bHBcbiAgICAuc3JjKHJvdXRlcy5qcy5zcmMpXG4gICAgLnBpcGUoYnJvKHtcbiAgICAgICAgdHJhbnNmb3JtOiBbXG4gICAgICAgICAgICBiYWJlbGlmeS5jb25maWd1cmUoeyBwcmVzZXRzOiBbJ0BiYWJlbC9wcmVzZXQtZW52J10gfSksIFsndWdsaWZ5aWZ5JywgeyBnbG9iYWw6IHRydWUgfV1cbiAgICAgICAgXVxuICAgIH0pKVxuICAgIC5waXBlKGd1bHAuZGVzdChyb3V0ZXMuanMuZGVzdCkpO1xuXG5cblxuY29uc3QgY2xlYW4gPSAoKSA9PiBkZWwoWydidWlsZCddKTtcbmNvbnN0IHdlYnNlcnZlciA9ICgpID0+XG4gICAgZ3VscC5zcmMoXCJidWlsZFwiKVxuICAgIC5waXBlKHdzKHsgbGl2ZWxvYWQ6IHRydWUsIG9wZW46IHRydWUgfSkpO1xuXG5jb25zdCB3YXRjaCA9ICgpID0+IHtcbiAgICBndWxwLndhdGNoKHJvdXRlcy5wdWcud2F0Y2gsIHB1Zyk7XG4gICAgZ3VscC53YXRjaChyb3V0ZXMuaW1nLnNyYywgaW1nKTtcbiAgICBndWxwLndhdGNoKHJvdXRlcy5zYXNzLndhdGNoLCBzdHlsZXMpO1xuICAgIGd1bHAud2F0Y2gocm91dGVzLmpzLndhdGNoLCBqcyk7XG59XG5cbmNvbnN0IHByZXBhcmUgPSBndWxwLnNlcmllcyhbY2xlYW4sIGltZ10pO1xuY29uc3QgYXNzZXRzID0gZ3VscC5zZXJpZXMoW3B1Zywgc3R5bGVzLCBqc10pO1xuY29uc3QgcG9zdERldiA9IGd1bHAuc2VyaWVzKFt3ZWJzZXJ2ZXIsIHdhdGNoXSk7XG5leHBvcnQgY29uc3QgZGV2ID0gZ3VscC5zZXJpZXMoW3ByZXBhcmUsIGFzc2V0cywgcG9zdERldl0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "routes",
        "pug",
        "watch",
        "src",
        "dest",
        "img",
        "js",
        "gulp",
        "pipe",
        "styles",
        "on",
        "logError",
        "transform",
        "babelify",
        "configure",
        "presets",
        "global",
        "clean",
        "webserver",
        "liveload",
        "open",
        "prepare",
        "series",
        "assets",
        "postDev",
        "dev"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/soulruji/Gitlab_private/supergulp",
      "sourcesContent": [
        "import gulp from \"gulp\";\nimport gpug from 'gulp-pug';\nimport del from 'del';\nimport ws from 'gulp-webserver';\nimport gimage from 'gulp-image';\nimport sass from 'gulp-sass';\nimport autoprefixer from 'gulp-autoprefixer';\nimport minifycss from 'gulp-csso';\nimport postcss from \"gulp-postcss\";\nimport browserslist from 'browserslist';\nimport bro from 'gulp-bro';\nimport babelify from 'babelify';\n\n\nsass.compiler = require('node-sass');\n\nconst routes = {\n    pug: {\n        watch: \"src/**/*.pug\",\n        src: \"src/*.pug\",\n        dest: \"build\"\n    },\n    img: {\n        src: \"src/img/*\",\n        dest: \"build/img\"\n    },\n    sass: {\n        watch: 'src/sass/**/*.scss',\n        src: 'src/sass/style.scss',\n        dest: 'build/css'\n    },\n    js: {\n        watch: \"src/js/**/.js\",\n        src: 'src/js/main.js',\n        dest: 'build/js'\n    }\n};\n\nconst pug = () =>\n    gulp\n    .src(routes.pug.src)\n    .pipe(gpug())\n    .pipe(gulp.dest(routes.pug.dest));\n\nconst img = () =>\n    gulp\n    .src(routes.img.src)\n    .pipe(gimage())\n    .pipe(gulp.dest(routes.img.dest));\n\nconst styles = () =>\n    gulp\n    .src(routes.sass.src)\n    .pipe(sass().on(\"error\", sass.logError))\n    .pipe(autoprefixer())\n    .pipe(minifycss())\n    .pipe(gulp.dest(routes.sass.dest));\n\nconst js = () =>\n    gulp\n    .src(routes.js.src)\n    .pipe(bro({\n        transform: [\n            babelify.configure({ presets: ['@babel/preset-env'] }), ['uglifyify', { global: true }]\n        ]\n    }))\n    .pipe(gulp.dest(routes.js.dest));\n\n\n\nconst clean = () => del(['build']);\nconst webserver = () =>\n    gulp.src(\"build\")\n    .pipe(ws({ liveload: true, open: true }));\n\nconst watch = () => {\n    gulp.watch(routes.pug.watch, pug);\n    gulp.watch(routes.img.src, img);\n    gulp.watch(routes.sass.watch, styles);\n    gulp.watch(routes.js.watch, js);\n}\n\nconst prepare = gulp.series([clean, img]);\nconst assets = gulp.series([pug, styles, js]);\nconst postDev = gulp.series([webserver, watch]);\nexport const dev = gulp.series([prepare, assets, postDev]);"
      ]
    },
    "sourceType": "script",
    "mtime": 1585008032102
  }
}